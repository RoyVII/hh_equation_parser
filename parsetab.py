
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftPOWERrightUMINUSARCCOS ARCSIN ARCTAN COS DIFFERENTIAL DIVIDE EQUALS EXP HARCCOS HARCSIN HARCTAN HCOS HSIN HTAN LPAREN MINUS NAME NUMBER PLUS POWER RPAREN SIN TAN TIMESstatement : init equationinit :equation : differential \n                | simpledifferential : DIFFERENTIAL NAME EQUALS expressionsimple : NAME EQUALS expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : expression POWER NUMBERexpression : expression POWER NAMEexpression : expression POWER LPAREN expression RPARENexpression : EXP LPAREN expression RPARENexpression : NAME'
    
_lr_action_items = {'DIFFERENTIAL':([0,2,],[-2,6,]),'NAME':([0,2,6,9,10,13,14,18,19,20,21,22,25,32,],[-2,7,8,11,11,11,11,11,11,11,11,31,11,11,]),'$end':([1,3,4,5,11,12,15,17,23,26,27,28,29,30,31,33,36,37,],[0,-1,-3,-4,-18,-6,-13,-5,-11,-7,-8,-9,-10,-14,-15,-12,-17,-16,]),'EQUALS':([7,8,],[9,10,]),'MINUS':([9,10,11,12,13,14,15,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[13,13,-18,19,13,13,-13,19,13,13,13,13,-11,19,13,-7,-8,-9,-10,-14,-15,13,-12,19,19,-17,-16,]),'LPAREN':([9,10,13,14,16,18,19,20,21,22,25,32,],[14,14,14,14,25,14,14,14,14,32,14,14,]),'NUMBER':([9,10,13,14,18,19,20,21,22,25,32,],[15,15,15,15,15,15,15,15,30,15,15,]),'EXP':([9,10,13,14,18,19,20,21,25,32,],[16,16,16,16,16,16,16,16,16,16,]),'PLUS':([11,12,15,17,23,24,26,27,28,29,30,31,33,34,35,36,37,],[-18,18,-13,18,-11,18,-7,-8,-9,-10,-14,-15,-12,18,18,-17,-16,]),'TIMES':([11,12,15,17,23,24,26,27,28,29,30,31,33,34,35,36,37,],[-18,20,-13,20,-11,20,20,20,-9,-10,-14,-15,-12,20,20,-17,-16,]),'DIVIDE':([11,12,15,17,23,24,26,27,28,29,30,31,33,34,35,36,37,],[-18,21,-13,21,-11,21,21,21,-9,-10,-14,-15,-12,21,21,-17,-16,]),'POWER':([11,12,15,17,23,24,26,27,28,29,30,31,33,34,35,36,37,],[-18,22,-13,22,-11,22,22,22,22,22,-14,-15,-12,22,22,-17,-16,]),'RPAREN':([11,15,23,24,26,27,28,29,30,31,33,34,35,36,37,],[-18,-13,-11,33,-7,-8,-9,-10,-14,-15,-12,36,37,-17,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'init':([0,],[2,]),'equation':([2,],[3,]),'differential':([2,],[4,]),'simple':([2,],[5,]),'expression':([9,10,13,14,18,19,20,21,25,32,],[12,17,23,24,26,27,28,29,34,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> init equation','statement',2,'p_statement','equation_parser.py',74),
  ('init -> <empty>','init',0,'p_init','equation_parser.py',77),
  ('equation -> differential','equation',1,'p_equation','equation_parser.py',80),
  ('equation -> simple','equation',1,'p_equation','equation_parser.py',81),
  ('differential -> DIFFERENTIAL NAME EQUALS expression','differential',4,'p_differential','equation_parser.py',84),
  ('simple -> NAME EQUALS expression','simple',3,'p_simple','equation_parser.py',94),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','equation_parser.py',104),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','equation_parser.py',105),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','equation_parser.py',106),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','equation_parser.py',107),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','equation_parser.py',122),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','equation_parser.py',127),
  ('expression -> NUMBER','expression',1,'p_expression_number','equation_parser.py',132),
  ('expression -> expression POWER NUMBER','expression',3,'p_expression_power_int','equation_parser.py',137),
  ('expression -> expression POWER NAME','expression',3,'p_expression_power_name','equation_parser.py',152),
  ('expression -> expression POWER LPAREN expression RPAREN','expression',5,'p_expression_power_expr','equation_parser.py',156),
  ('expression -> EXP LPAREN expression RPAREN','expression',4,'p_expression_exp','equation_parser.py',160),
  ('expression -> NAME','expression',1,'p_expression_name','equation_parser.py',164),
]
